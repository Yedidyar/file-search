name: CI
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      docs-affected: ${{ steps.docs-affected.outputs.affected }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.1
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      - run: npx nx format:check

      - run: npx nx affected -t lint test build --skip-nx-cache
        env:
          PORT: 3000
          HOST: 'localhost'
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5433/file_search_test'

      - name: Check if docs is affected
        if: github.ref == 'refs/heads/main'
        id: docs-affected
        run: |
          if npx nx show projects --affected --type app | grep -q "docs"; then
            echo "affected=true" >> $GITHUB_OUTPUT
          else
            echo "affected=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload docs build artifact
        if: github.ref == 'refs/heads/main' && steps.docs-affected.outputs.affected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: apps/docs/.vitepress/dist
          retention-days: 1

  deploy:
    if: github.ref == 'refs/heads/main' && needs.main.outputs.docs-affected == 'true'
    needs: main
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: pages
      cancel-in-progress: false
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download docs build artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: ./docs-dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs-dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
